package uk.co.jassoft.markets.eod.eoddata.client;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * EODData Financial Information Web Service
 *
 * This class was generated by Apache CXF 3.1.4
 * 2016-05-13T13:22:32.898+01:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "Data", 
                  wsdlLocation = "file:/Users/jonshaw/markets/CommonFunctions/src/main/java/eoddata/data.asmx",
                  targetNamespace = "http://ws.eoddata.com/Data") 
public class Data extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.eoddata.com/Data", "Data");
    public final static QName DataHttpPost = new QName("http://ws.eoddata.com/Data", "DataHttpPost");
    public final static QName DataHttpGet = new QName("http://ws.eoddata.com/Data", "DataHttpGet");
    public final static QName DataSoap12 = new QName("http://ws.eoddata.com/Data", "DataSoap12");
    public final static QName DataSoap = new QName("http://ws.eoddata.com/Data", "DataSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:32881/data.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Data.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/jonshaw/markets/CommonFunctions/src/main/java/eoddata/data.asmx");
        }
        WSDL_LOCATION = url;
    }

    public Data(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Data(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Data() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public Data(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Data(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Data(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DataHttpPost
     */
    @WebEndpoint(name = "DataHttpPost")
    public DataHttpPost getDataHttpPost() {
        return super.getPort(DataHttpPost, DataHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataHttpPost
     */
    @WebEndpoint(name = "DataHttpPost")
    public DataHttpPost getDataHttpPost(WebServiceFeature... features) {
        return super.getPort(DataHttpPost, DataHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns DataHttpGet
     */
    @WebEndpoint(name = "DataHttpGet")
    public DataHttpGet getDataHttpGet() {
        return super.getPort(DataHttpGet, DataHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataHttpGet
     */
    @WebEndpoint(name = "DataHttpGet")
    public DataHttpGet getDataHttpGet(WebServiceFeature... features) {
        return super.getPort(DataHttpGet, DataHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap12")
    public DataSoap getDataSoap12() {
        return super.getPort(DataSoap12, DataSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap12")
    public DataSoap getDataSoap12(WebServiceFeature... features) {
        return super.getPort(DataSoap12, DataSoap.class, features);
    }


    /**
     *
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap")
    public DataSoap getDataSoap() {
        return super.getPort(DataSoap, DataSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap")
    public DataSoap getDataSoap(WebServiceFeature... features) {
        return super.getPort(DataSoap, DataSoap.class, features);
    }

}
